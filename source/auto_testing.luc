module auto_testing (
    input clk,  // clock
    input rst,  // reset
    
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],       // Digit select on IO Shield
    input io_button [5]    // 5 buttons on IO Shield
  ) {
  
  .clk(clk){
    .rst(rst){
      fsm auto = {IDLE,A,B,C,S};
      multi_seven_seg seg;
      statecounter statectr;
      
      adder_test a_test;
      boolean_test b_test;
      comparator_test c_test;
      shifter_test s_test;
    }
  }
  always {
    a_test.trigger = 0;
    b_test.trigger = 0;
    c_test.trigger = 0;
    s_test.trigger = 0;
    
    io_seg = 8hff;          // turn segments off
    io_led = 3x{{8h0}};    // turn LEDs off

    seg.values = {8h0,8h0,8h0,8h0}; 
    io_seg = ~seg.seg; // Connect segments to the driver
    io_sel = ~seg.sel; // Connect digit select to the driver
    
    case(auto.q){
      auto.IDLE:
        seg.values = {8h1,8h4,8h9,8h5};
        if (io_button[3]==1){
          auto.d = auto.A;}
        else if (io_button[0]==1){
          auto.d = auto.B;}
        else if (io_button[4]==1){
          auto.d = auto.C;}
        else if (io_button[2]==1){
          auto.d = auto.S;}
      auto.A:
        a_test.trigger=1;
        if (statectr.msb==1){
          a_test.trigger=0;
          auto.d=auto.IDLE;
        }
      auto.B:
        b_test.trigger=1;
        if (statectr.msb==1){
          b_test.trigger=0;
          auto.d=auto.IDLE;
        }
      auto.C:
        c_test.trigger=1;
        if (statectr.msb==1){
          c_test.trigger=0;
          auto.d=
        
          
        
          
        
        
    
  }
}
